sudo: required

services:
   - docker
  
before_install:
  - docker build -t yt/react-test -f ./client/Dockerfile.dev ./client

# test section
script:
  - docker run -e CI=true yt/react-test npm test

deploy:
  # travis ci has pre-configure to deploy the app to many different providers/hosting providers eg. AWS
  # use the instruction to automatically deploy the application
  provider: elasticbeanstalk
  # customized config
  region: "us-east-2"
  app: "multi-docker"
  env: "Multi-docker-env"
  # copy all the file in the github repo to an S3 bucket, and then deploy it in elasticbeanstalk
  bucket_name: "elasticbeanstalk-us-east-2-068544131701"
  bucket_path: "multi-docker"
  on: 
    # only deploy the app, if there are code change in the master branch
    branch: master
  # access key ID and secret access key is needed to connect AWS and travis
  # but since the repo is public
  # use a feature of env secretes provided by travis CI(set up in the setting of the repo in travis CI)
  access_key_id: ${AWS_ACCESS_KEY}
  secret_access_key: ${AWS_SECRET_KEY}

# build production version of all projects
after_success:
  - docker build -t $DOCKER_ID/multi-client ./client
  - docker build -t $DOCKER_ID/multi-nginx ./nginx
  - docker build -t $DOCKER_ID/multi-server ./server
  - docker build -t $DOCKER_ID/multi-worker ./worker
  # take the images and push it to docker hub
  # in order to push it to docker hub, will need to log in into docker CLI
  # run "docker login" in the terminal, will automatically associate the docker account
  # use travis CI to manage the docker credentials
  # echo "$DOCKER_PASSWORD": retreive the env var, and use it as an input to the next command
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # pish the image to docker hub
  - docker push $DOCKER_ID/multi-client
  - docker push $DOCKER_ID/multi-nginx
  - docker push $DOCKER_ID/multi-server
  - docker push $DOCKER_ID/multi-worker

